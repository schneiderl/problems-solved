('\\n|\\s|\\r|\\t\\f[\\n]', '', 'void ')
[reserved_word,void]
[function,funcao1]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '()\n ')
[id,]
[l_paren,(]
[id,]
[r_paren,)]
[id,]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '{')
[l_bracket,{]
('\\n|\\s|\\r|\\t\\f[\\n]', '', 'float ')
[reserved_word,float]
('\\n|\\s|\\r|\\t\\f[\\n]', '', 'NotaDaP1, NotaDaP2')
[id,NotaDaP1]
[comma,,]
[id,NotaDaP2]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
('\\n|\\s|\\r|\\t\\f[\\n]', '', 'float ')
[reserved_word,float]
('\\n|\\s|\\r|\\t\\f[\\n]', '', 'Media')
[id,Media]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
[function,clrscr]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '()')
[id,]
[l_paren,(]
[id,]
[r_paren,)]
[id,]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ' \n NotaDaP1 ')
[id,NotaDaP1]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '=')
[equal,=]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ' 6.6')
[id,6.6]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ' \n NotaDaP2 ')
[id,NotaDaP2]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '=')
[equal,=]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ' 8.2')
[id,8.2]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '\n Media ')
[id,Media]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '=')
[equal,=]
[function,]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '(NotaDaP1 + NotaDaP2) / 2.0')
[id,]
[l_paren,(]
[id,NotaDaP1]
[arith_op,+]
[id,NotaDaP2]
[r_paren,)]
[id,]
[arith_op,/]
[id,2.0]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
[function,printf]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '("Média Final : %6.3f", Media)')
[id,]
[l_paren,(]
[string_literal,"Média Final : %6.3f"]
[comma,,]
[id,Media]
[r_paren,)]
[id,]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
[function,getch]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '()')
[id,]
[l_paren,(]
[id,]
[r_paren,)]
[id,]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '}')
[r_bracket,}]
('\\n|\\s|\\r|\\t\\f[\\n]', '', 'int ')
[reserved_word,int]
[function,funcao2]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '()\n ')
[id,]
[l_paren,(]
[id,]
[r_paren,)]
[id,]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '{')
[l_bracket,{]
('\\n|\\s|\\r|\\t\\f[\\n]', '', 'int ')
[reserved_word,int]
('\\n|\\s|\\r|\\t\\f[\\n]', '', 'num')
[id,num]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
('\\n|\\s|\\r|\\t\\f[\\n]', '', 'string ')
[reserved_word,string]
('\\n|\\s|\\r|\\t\\f[\\n]', '', 's')
[id,s]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
[function,printf]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '("Digite um número: ")')
[id,]
[l_paren,(]
[string_literal,"Digite um número: "]
[r_paren,)]
[id,]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
[function,scanf]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '("%d",&num)')
[id,]
[l_paren,(]
[string_literal,"%d"]
[comma,,]
[id,&num]
[r_paren,)]
[id,]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
('\\n|\\s|\\r|\\t\\f[\\n]', '', 'if')
[reserved_word,if]
[function,]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '(num>10)\n ')
[id,]
[l_paren,(]
[id,num]
[relationalOp,>]
[num,10]
[r_paren,)]
[id,]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '{')
[l_bracket,{]
[function,printf]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '("\\n\\n O número e maior que 10")')
[id,]
[l_paren,(]
[string_literal,"\n\n O número e maior que 10"]
[r_paren,)]
[id,]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '\n s ')
[id,s]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '=')
[equal,=]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ' "errou"')
[string_literal, "errou"]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '}')
[r_bracket,}]
('\\n|\\s|\\r|\\t\\f[\\n]', '', 'if')
[reserved_word,if]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ' (num')
[id,]
[l_paren,(]
[id,num]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '==')
[relationalOp,==]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '10)\n ')
[num,10]
[r_paren,)]
[id,]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '{')
[l_bracket,{]
[function,printf]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '("\\n\\n Você acertou!\\n")')
[id,]
[l_paren,(]
[string_literal,"\n\n Você acertou!\n"]
[r_paren,)]
[id,]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
[function,printf]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '("O numero é igual a 10.")')
[id,]
[l_paren,(]
[string_literal,"O numero é igual a 10."]
[r_paren,)]
[id,]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '\n s ')
[id,s]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '=')
[equal,=]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ' "acertou"')
[string_literal, "acertou"]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '}')
[r_bracket,}]
('\\n|\\s|\\r|\\t\\f[\\n]', '', 'if')
[reserved_word,if]
[function,]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '(num<10)\n ')
[id,]
[l_paren,(]
[id,num]
[relationalOp,<]
[num,10]
[r_paren,)]
[id,]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '{')
[l_bracket,{]
[function,printf]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '("\\n\\n O número é menor que 10")')
[id,]
[l_paren,(]
[string_literal,"\n\n O número é menor que 10"]
[r_paren,)]
[id,]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '\n s ')
[id,s]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '=')
[equal,=]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ' "errou"')
[string_literal, "errou"]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '}')
[r_bracket,}]
('\\n|\\s|\\r|\\t\\f[\\n]', '', 'if')
[reserved_word,if]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '(num ')
[id,]
[l_paren,(]
[id,num]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '==')
[relationalOp,==]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ' 10 && s ')
[id,10]
[logicOp,&&]
[id,s]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '==')
[relationalOp,==]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ' "acertou")\n ')
[string_literal, "acertou"]
[r_paren,)]
[id,]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '{')
[l_bracket,{]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '\n return 1')
[id,]
[reserved_word,return]
[id,1]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '}')
[r_bracket,}]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '\n return 0')
[id,]
[reserved_word,return]
[id,0]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '}')
[r_bracket,}]
('\\n|\\s|\\r|\\t\\f[\\n]', '', 'int ')
[reserved_word,int]
[function,main]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '()\n ')
[id,]
[l_paren,(]
[id,]
[r_paren,)]
[id,]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '{')
[l_bracket,{]
[function,funcao1]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '()')
[id,]
[l_paren,(]
[id,]
[r_paren,)]
[id,]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
[function,funcao2]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '()')
[id,]
[l_paren,(]
[id,]
[r_paren,)]
[id,]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '\n return 1')
[id,]
[reserved_word,return]
[id,1]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
('\\n|\\s|\\r|\\t\\f[\\n]', '', 'while')
[reserved_word,while]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '(1')
[id,]
[l_paren,(]
[num,1]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '==')
[relationalOp,==]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '2)')
[num,2]
[r_paren,)]
[id,]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '{')
[l_bracket,{]
[function,print]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '("teste")')
[id,]
[l_paren,(]
[string_literal,"teste"]
[r_paren,)]
[id,]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '}')
[r_bracket,}]
('\\n|\\s|\\r|\\t\\f[\\n]', '', 'do')
[reserved_word,do]
[function,5]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '(printf("teste"))')
[id,]
[l_paren,(]
[reserved_word,printf]
[l_paren,(]
[string_literal,"teste"]
[r_paren,)]
[id,]
[r_paren,)]
[id,]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '}')
[r_bracket,}]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '\n \n x ')
[id,x]
('\\n|\\s|\\r|\\t\\f[\\n]', '', '=')
[equal,=]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ' 1 + 2')
[id,1]
[arith_op,+]
[id,2]
('\\n|\\s|\\r|\\t\\f[\\n]', '', ';')
[semicolon,;]
